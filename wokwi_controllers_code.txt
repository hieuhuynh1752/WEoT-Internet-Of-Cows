#include <WiFi.h>  
#include <PubSubClient.h>
#include <DHTesp.h>

const int DHT_PIN = 15;  
DHTesp dht; 
const char* ssid = "Wokwi-GUEST"; ///  simulated wifi (can't change name)
const char* password = "";
const char* mqtt_server = "test.mosquitto.org";// mosquitto server url

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
float temp = 0;
float hum = 0;

void setup_wifi() { 
  delay(10);
  Serial.println();
  Serial.print("Connecting to WiFi: ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA); 
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) { 
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros()); // setting seed so the randomly generated values are for sure different than in previous runs

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) { 
  }

void reconnect() { 
  while (!client.connected()) {
    Serial.print("Reconnecting to MQTT broker...");
    String clientId = "ESP32Client-";
    clientId += String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("Connected");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 1 second");
      delay(1000);
    }}
}

void setup() {
  // put your setup code here, to run once:
  pinMode(2, OUTPUT);     
  Serial.begin(115200);
  setup_wifi(); 
  client.setServer(mqtt_server, 1883);
  dht.setup(DHT_PIN, DHTesp::DHT22);
}

void loop() {
  delay(10); // this speeds up the simulation

  if (!client.connected()) {
    reconnect();
  }
  client.loop(); // important to call regularly in the main loop to ensure that the MQTT client operates properly

  unsigned long now = millis();
  if (now - lastMsg > 2000) { // publish every 2s
    lastMsg = now;
    TempAndHumidity  data = dht.getTempAndHumidity();
    
    String temp = String(data.temperature, 2);
    client.publish("/cowlarIoTse4gd/temp", temp.c_str()); 
    String hum = String(data.humidity, 1); 
    client.publish("/cowlarIoTse4gd/hum", hum.c_str());

    Serial.print("Temperature: ");
    Serial.println(temp);
    Serial.print("Humidity: ");
    Serial.println(hum);
  }
}